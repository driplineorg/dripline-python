name: Publish

on:
  push:
    branches: [ main, develop ]
    tags: ['*']
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: docker.io
  BASE_IMAGE_USER: driplineorg
  BASE_IMAGE_REPO: dripline-cpp
  BASE_IMAGE_VER: 'v2.8.8'

jobs:

  test_docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        id: build
        uses: docker/build-push-action@v5
        env:
          BASE_IMAGE_TAG: ${{ env.BASE_IMAGE_VER }}-dev
        with:
          context: .
          push: false
          build-args: |
            img_user=${{ env.BASE_IMAGE_USER }}
            img_repo=${{ env.BASE_IMAGE_REPO }}
            img_tag=${{ env.BASE_IMAGE_TAG }}
          platforms: linux/amd64

  build_and_push:

    runs-on: ubuntu-latest

    if: |
      github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.draft == false)

    needs: [test_docker]

    strategy:
      matrix:
        build: [dev, release]
        include:
          - build: dev
            tag-suffix: '-dev'
          - build: release
            tag-suffix: ''

    steps:

      - name: Checkout the repo 
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: driplineorg/dripline-python
          flavor: |
            latest=auto
            suffix=${{ matrix.tag-suffix }},onlatest=true
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads{0}', 'main') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
#         for ghcr.io, use:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build_push
        uses: docker/build-push-action@v5
        env:
          BASE_IMAGE_TAG: ${{ env.BASE_IMAGE_VER }}${{ matrix.tag-suffix }}
        with:
          context: .
          push: ${{ github.event_name == 'push' }}  # limited to develop, main, and tags; don't push on PR
          build-args: | 
            img_user=${{ env.BASE_IMAGE_USER }}
            img_repo=${{ env.BASE_IMAGE_REPO }}
            img_tag=${{ env.BASE_IMAGE_TAG }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64
