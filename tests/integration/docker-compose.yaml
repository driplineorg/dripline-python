services:

  # The broker for the mesh
  rabbit-broker:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=dripline
      - RABBITMQ_DEFAULT_PASS=dripline
    healthcheck:
      test: ["CMD-SHELL", "curl -u dripline:dripline http://rabbit-broker:15672/api/overview &> /dev/null || exit 1"]

  postgres:
    image: postgres:16.0
    volumes:
      - ./postgres_init.d:/docker-entrypoint-initdb.d
    environment:
      # per the docs, you do *not* want to run with this configuration in production
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The run_simple_service example from dl-cpp
  simple-service:
    image: ghcr.io/driplineorg/dripline-cpp:${DLCPP_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
    volumes:
      - ./key-value-store.yaml:/root/key-value-store.yaml
    command: >
      bash -c "run_simple_service -vv -b rabbit-broker -u dripline --password-file /dl_pw.txt"
    configs:
      - dl_pw.txt

  # Just the base service class
  base-service:
    image: ghcr.io/driplineorg/dripline-python:${DLPY_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
    command: >
      bash -c "dl-serve -vv -b rabbit-broker -u dripline --password-file /dl_pw.txt"
    configs:
      - dl_pw.txt

  # The classic key-value store, a configuration based on the base Service class
  key-value-store:
    image: ghcr.io/driplineorg/dripline-python:${DLPY_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
    volumes:
      - ./key-value-store.yaml:/root/key-value-store.yaml
    command: >
      bash -c "dl-serve -vv -b rabbit-broker -u dripline --password-file /dl_pw.txt -c /root/key-value-store.yaml"
    configs:
      - dl_pw.txt

  # The bare alert consumer
  alert-consumer:
    image: ghcr.io/driplineorg/dripline-python:${DLPY_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
    volumes:
      - ./alert-consumer.yaml:/root/alert-consumer.yaml
    command: >
      bash -c "dl-serve -vv -b rabbit-broker -u dripline --password-file /dl_pw.txt -c /root/alert-consumer.yaml"
    configs:
      - dl_pw.txt

  sensor-logger:
    image: ghcr.io/driplineorg/dripline-python:${DLPY_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - ./sensor-logger.yaml:/root/sensor-logger.yaml
    command:
      - dl-serve
      - -vv
      - -b
      - rabbit-broker
      - -c
      - /root/sensor-logger.yaml
      - -u
      - dripline
      - --password-file
      - /dl_pw.txt
    configs:
      - dl_pw.txt

configs:
  dl_pw.txt:
    file: ./password.txt
#  auths.json:
#    file: ./authentications.json
