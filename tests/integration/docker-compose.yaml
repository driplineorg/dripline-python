services:

  # The broker for the mesh
  rabbit-broker:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=dripline
      - RABBITMQ_DEFAULT_PASS=dripline
    healthcheck:
      test: ["CMD-SHELL", "curl -u dripline:dripline http://rabbit-broker:15672/api/overview &> /dev/null || exit 1"]

  http-server:
    image: ghcr.io/driplineorg/dripline-python:${DLPY_IMG_TAG:-latest-dev}
    depends_on:
      rabbit-broker:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ../../html:/html
      - ./dripline_mesh.yaml:/root/.dripline_mesh.yaml
    environment:
      - DRIPLINE_USER=dripline
      - DRIPLINE_PASSWORD=dripline
    command: >
      bash -c "dl-http-server"

  postgres:
    image: postgres:16.0
    volumes:
      - ./postgres_init.d:/docker-entrypoint-initdb.d
    environment:
      # per the docs, you do *not* want to run with this configuration in production
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  scpi-device:
    image: python:3.12.1-slim-bookworm
    volumes:
      - ./scpi_device/scpi_device.py:/root/scpi_device.py
    command: 
      - /root/scpi_device.py
      - scpi-device
    environment:
      PYTHONUNBUFFERED: 1  # don't buffer printing to stdout
